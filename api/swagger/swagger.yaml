swagger: "2.0"
info:
  version: "0.0.1"
  title: Vignettes API
host: http://ec2-52-56-61-215.eu-west-2.compute.amazonaws.com:10010
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  sessionId:
    type: apiKey
    in: header
    name: sessionId
security:
  - sessionId: []
paths:
  /my-vignettes:
    x-swagger-router-controller: vignettes
    get:
      description: Show user's valid vignettes
      tags:
        - userVignettes
      operationId: getMyVignettes
      parameters:
        - name: vignetteType
          in: query
          required: false
          description: Vignette type that user wants to see
          type: string
          enum:
          - weekly
          - monthly
          - yearly
          - county
      responses:
        "200":
          description: Show user's valid vignettes
          schema: 
            $ref: "#/definitions/Vignette"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /purchase:
    x-swagger-router-controller: vignettes
    post:
      description: Purchase vignette for given vehicle
      tags:
        - userVignettes
      operationId: purchase
      parameters:
        - name: vignette
          in: body
          schema:
            $ref: "#/definitions/PurchaseRequest"
      responses:
        "201":
          description: Successful vignette purchase
          schema:
            $ref: "#/definitions/Vignette"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Vehicle not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /vehicles:
    x-swagger-router-controller: vehicles
    post:
      description: Saves new vehicle to the app
      operationId: saveVehicle
      tags:
        - userVehicles
      parameters:
        - name: vehicle
          in: body
          required: true
          description: Vehicle data to save vehicle with
          schema:
            $ref: "#/definitions/SaveVehicleRequest"
      responses:
        "201":
          description: Successfully saved vehicle
          schema: 
            $ref: "#/definitions/NewVehicleResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /vehicles/{vehicleId}:
    x-swagger-router-controller: vehicles
    delete:
      description: Delete vehicle
      tags:
        - userVehicles
      operationId: deleteVehicle
      parameters:
        - name: vehicleId
          in: path
          required: true
          description: Id of vehicle to delete
          type: string
      responses:
        "200": 
          description: Deleted vehicle
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /signup:
    x-swagger-router-controller: auth
    post:
      description: Creates new user
      operationId: signup
      tags:
        - auth
      security: []
      parameters:
        - name: user
          in: body
          required: true
          description: User data to create new user with
          schema:
            $ref: "#/definitions/Credentials"
      responses:
        "201":
          description: Successfully created user
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Error, email is already taken
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login:
    x-swagger-router-controller: auth
    post:
      description: Logs in user
      operationId: login
      tags:
        - auth
      security: []
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            $ref: "#/definitions/Credentials"
      responses:
        "200":
          description: Successfully logged in user
          schema:
            type: object
            required:
              - sessionID
            properties:
              sessionID:
                type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /logout:
    x-swagger-router-controller: auth
    get:
      description: Logs out user
      operationId: logout
      tags:
        - auth
      responses:
        "200":
          description: Logs out user
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /vignettes/expired:
    x-swagger-router-controller: vignettes
    delete:
      description: Delete all expired vignettes
      operationId: deleteExpiredVignettes
      tags:
        - vignettes
      responses:
        "200":
          description: Delete successful
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  Credentials:
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
  User:
    properties:
      id:
        type: string
      email:
        type: string
  Vignette:
    properties:
      _id:
        type: string
      identifier:
        type: string
      validFrom:
        type: string
        format: date-time
      validTo:
        type: string
        format: date-time
      vignetteType:
        type: string
        enum:
          - weekly
          - monthly
          - yearly
          - county
      vehicleId:
        type: string
      userId:
        type: string
      licencePlate:
        type: string
    required:
      - identifier
      - vehicleId
  PurchaseRequest:
    properties:
      validFrom:
        type: string
        format: date
      vignetteType:
        type: string
        enum:
          - weekly
          - monthly
          - yearly
          - county
      vehicleId:
        type: string
    required:
      - validFrom
      - vignetteType
      - vehicleId
  SaveVehicleRequest:
    required:
      - vehicleCategory
      - licencePlate
    properties:
      vehicleCategory:
        description: Category of vehicle
        type: string
        enum:
          - car
          - motorcycle
          - bus
          - truck
      licencePlate:
        type: string
        description: Licence plate number of vehicle
  NewVehicleResponse:
    properties:
      _id:
        type: string
      vehicleCategory:
        description: Category of vehicle
        type: string
      licencePlate:
        type: string
        description: Licence plate number of vehicle
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
